version: 2.0
jobs:
    build:
        working_directory: /elasticmq
        docker:
            - image: docker:17.07.0-ce-git
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Install dependencies
                command: |
                    apk add --no-cache \
                      ca-certificates \
                      curl \
                      py-pip
                    pip install \
                      docker-compose
            - restore_cache:
                keys:
                    - elasticmq-{{ .Branch }}
                paths:
                    - /caches/elasticmq.tar
            - run:
                name: Load Docker image layer cache
                command: |
                    set +o pipefail
                    docker load -i /caches/elasticmq.tar | true
            - run:
                name: Build ElasticMQ Docker image
                command: |
                    docker build --cache-from=elasticmq -t elasticmq ./elasticmq
            - run:
                name: Save Docker image layer cache
                command: |
                    mkdir -p /caches
                    docker save -o /caches/elasticmq.tar elasticmq
            - save_cache:
                key: elasticmq-{{ .Branch }}-{{ epoch }}
                paths:
                    - /caches/elasticmq.tar
            - run:
                name: Run tests
                command: |
                    echo "Test"
                    docker-compose -f ./docker-compose.test.yml up
            - deploy:
                name: Push ElasticMq Docker image
                command: |
                    set +o pipefail
                    TAG=`git describe --tags | true`
                    echo "$TAG"
                    if echo "$TAG" | grep -Eq '[0-9]+(\.[0-9]+){2}'
                    then
                        curl -H "Content-Type: application/json" --data '{"source_type": "Tag", "source_name": "$CIRCLE_TAG"}' -X POST "https://registry.hub.docker.com/u/lkay/elasticmq/trigger/${DOCKER_HUB_TRIGGER_TOKEN}/"
                        curl -H "Content-Type: application/json" --data '{"docker_tag": "latest"}' -X POST "https://registry.hub.docker.com/u/lkay/elasticmq/trigger/${DOCKER_HUB_TRIGGER_TOKEN}/"
                    else
                        echo "Deploy skipped"
                    fi

deployment:
    deploy:
        tag: /.*/
        commands:
            - echo "Build for tag"
